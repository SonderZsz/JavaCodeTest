package Dont;

public class EqualsTest {
    /** == 与 equals 区别
     *
     *  ==
     *  1. 可以使用在基本数据类型变量和应用数据类型变量中
     *  2. 如果比较基本数据类型变量：比较两个变量保存的数据是否一致（类型不一定相同）
     *     如果比较引用数据类型变量：比较两个对象的***地址值***是否相同（两个引用是否指向同一个对象实体）
     *
     *  equals（）
     *  1. 是一个方法，而非运算符
     *  2. 只能适用于引用数据类型
     *  3. Object类中equals（）的定义：
     *     public boolean equals(Object obj){
     *         return (this == obj);
     *     }
     *    说明Object中定义的equals（）和 ==作用相同：👇
     *    比较两个对象的地址值是否相同（两个引用是否指向同一个对象实体）
     *  4. 像String、Data、File、包装类等都重写了Object类中红的equals（）方法。
     *      重写以后，比较的不是两个引用的地址是否相同，二十比较两个对象的“实体内容”是否相同
     *  5. 通常情况下，我们自定义的类如果使用equals（）的花，也通常是比较哦啊两个对象的“实体内容”是否相同。
     *     那么，我们就需要对Object类中的equals（）进行重写
     *
    */


}
